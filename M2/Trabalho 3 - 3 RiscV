# Disciplina: Arquitetura e Organização de Processadores
# Atividade: Avaliação 03 – Procedimentos em Linguagem de Montagem
# Exercício 03
# Alunos: João Vitor Loch Martins e Ahmad Reiano Wahab
	
.data
	str1: .asciz "Entre com Vet["
	str2: .asciz "]:"
	str3: .asciz "\n Vet["
	vetor: .word 0, 0, 0, 0, 0, 0, 0, 0

.text 
	la s0, vetor  
	addi s1, zero, 0  
	addi s2, zero, 8  
	j main
	
verzero:
	add a0,zero,s1  
	add a3,zero,s2 
loop:	add a1,a0,a0 
	add a1,a1,a1 
	add a1,a1,s0 
	lw a2, 0(a1)  
	addi a0, a0, 1
	bne a2,zero, nzero 
	addi a7,a7, 1
nzero: 	bne a0, s2, loop 
	jr ra 
	
main:	addi a7,zero, 4 #Da o valor "4" pro a7, sinalizando escrever string na tela
	la a0, str1 #Da um load adress na string "str1" , pra ela ser mostrada via ecall
	ecall
	addi a7,zero,1 #Da um valor "1" pro a7, sinalizando escrever inteiro
	add a0, zero,s1 #Da o valor de s1 pro a0 e mostrar no sycall
	ecall
	addi a7,zero, 4 #Da o valor "4" pro a7, sinalizando escrever string na tela
	la a0, str2 #Da um load adress na string "str1" , pra ela ser mostrada via ecall
	ecall
	add t0, s1,s1 #soma i+i
	add t0, t0,t0 #soma 2i + 2i
	add t0, t0,s0 #soma 4i + end base do vetor
	addi a7, zero, 5 #Da o valor "5" pro a7, sinalizando ler inteiro
	ecall
	add t1, zero,a0 #Grava o inteiro lido pelo ecall, que estava no a7, no s0
	sw t1, 0(t0) #Salva o t1 no vetor[i]
	addi s1, s1, 1 #i++
	bne s1,s2, main #se i<8 volta pro label main
	addi s1,zero,0 #Reseta o i pra 0
	addi a7, zero,0 #deixa o a7 como 0 pro contador do procedimento
	jal verzero #Pula pro procedimento verzero, e salva o endereço de retorno pra instrução debaixo
	add s3, zero,a7 #Salva o resultado do proced em s3
	addi a7,zero,1 #Da o valor 1 pro ecall pra ele mostrar um valor inteiro
	add a0, zero,s3 #manda o s3 pro a0 pra ele mostrar no ecall
	ecall
